name: Deploy specifications to GitHub pages

on:
  push:
    branches: ["main"]
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash
jobs:
  # Uploads OCP Lock specification.
  ocp-lock:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/trustedcomputinggroup/pandoc:latest
    name: Render OCP LOCK HTML
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Checkout Template dependencies
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          fetch-tags: true
          repository: "opencomputeproject/ocp-spec-tools"
          ref: "45d41cc0d58edccf49d961443d52af4291db7735"
          # The underlying tex and templates assume this exists under the "extra" folder.
          path: "doc/ocp_lock/extra"

      - name: Render OCP LOCK HTML
        run: |
          # Need to trust directory in the docker container.
          chown -R $(id -u):$(id -g) $PWD

          # Publish pages for `main` and ocp-lock tags.
          GIT_REFS=()
          GIT_REFS+=("main")
          GIT_REFS+=($(git tag --list 'ocp-lock-*'))

          for ref in "${GIT_REFS[@]}"; do
            echo "Building git ref $ref"

            git reset --hard $ref

            (cd doc/ocp_lock &&
            /usr/bin/build.sh \
            --crossref=tcg \
            --csl extra/ocp-pandoc-resources/ieee.csl \
            --nogitversion \
            --template_html extra/ocp-pandoc-resources/html/ocp.html.template \
            --html_stylesheet extra/ocp-pandoc-resources/html/style.css \
            --html_stylesheet extra/ocp-pandoc-resources/html/github-markdown.css \
            --resourcedir extra/ocp-pandoc-resources/pdf \
            --html ocp-lock.html lock_spec.ocp)

            if [[ "${ref}" == "main" ]]; then
              trimmed_ref="HEAD"
            else
              # Trim `ocp-lock-` to avoid redundancy in the URL.
              trimmed_ref=$(echo ${ref} | sed 's/ocp-lock-//')
            fi

            mkdir -p "gh-pages/ocp-lock/specification/${trimmed_ref}"
            cp doc/ocp_lock/ocp-lock.html "gh-pages/ocp-lock/specification/${trimmed_ref}/index.html"
            echo "Added webpage ocp-lock/specification/${trimmed_ref}/index.html"
          done

      - name: Upload artifacts for ocp-lock spec
        uses: actions/upload-artifact@v4
        with:
          name: ocp-lock
          path: gh-pages

  # Adds README.md files as chipsalliance.github.io index files.
  index:
    runs-on: ubuntu-latest
    name: Add README.md to website root
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Stage README
        run: |
          mkdir -p gh-pages-staging/doc
          cp -r doc/images/ gh-pages-staging/doc/
          cp README.md gh-pages-staging/README.md

      - name: Build with jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: gh-pages-staging
          destination: gh-pages
      - name: Upload artifacts for index
        uses: actions/upload-artifact@v4
        with:
          name: index
          path: gh-pages

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [index, ocp-lock]
    steps:
      - name: Download index artifacts
        uses: actions/download-artifact@v4
        with:
          name: index
          path: gh-pages
      - name: Download ocp-lock artifacts
        uses: actions/download-artifact@v4
        with:
          name: ocp-lock
          path: gh-pages
      - name: Upload static files as artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "gh-pages"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
