'
' OCP Lock: MIX_PMEK API sequence diagram showing Caliptra FW/HW interactions
'
'
@startuml

!include ocp_lock_utils.inc

!if ($show_title)
    Title "Mix PMEK into MEK seed"
!endif

!if ($show_precond)
    note across
        <b>Preconditions:</b>
        * PMEK Secret is stored in Key Vault slot B
        * The following sequence has occurred prior: Initialize MEK then zero or more MIX_PMEK

        <b>Notes:</b>
          * The sequence diagram assumes that the KV will not allow an input KV slot to also be used as an out KV slot. Caliptra FW is responsible for managing which KV slots are used and can adapt if this assumption is not correct.
          * This sequence is focused on successful execution of operations by the KV.

    end note
!endif

' Pre-existing data
meks++ $BUFFER_ACTIVATION
pmeks++ $BUFFER_ACTIVATION


fw $async mb++ : MIX_PMEK

!if ($show_api)
    note right mb
        | <b>Field      | <b>Size        | <b>Definition |
        | chksum        | u32            | Little endian |
        | unlocked_pmek | 512 bytes | Unlocked encrypted PMEK\n * PMEK Algorithm embedded |
    end note
!endif

mb $async cfw++ : Command

!if ($show_msg_parsing)
    cfw $sync mb : Get command
    mb--
    $self("cfw", "Determine command")
!else
    mb--
!endif

alt Storage Root Key exists

    alt MEK is not initialized (i.e., no PMEK has yet been included)
        cfw $sync kv++: HMAC512(Key: Slot A,\n                Key Data: "MEK Seed",\n                Destination: Slot X)
        kv $sync srk: Get Storage Root Key
        kv $sync kv: HMAC512 slot A with Data
        kv $sync meks: HMAC512 result MEK Seed with Storage Root Key
        !if ($show_done)
            kv $sync cfw-- : done
        !else
            kv--
        !endif
    end

    $self("cfw", "Determine Temporary slox Y for PMEK")

    cfw $sync kv++: Key_Unwrap(Key:  SlotB,\n                   Key Data: unlocked_pmek,\n                   Destination Slot: Y)
    kv $sync pmeks: Get PMEK secret
    kv $sync kv: Key_Unwrap unlocked_pmek
    kv $sync tempy: Put PMEK
    tempy++ $BUFFER_ACTIVATION
    !if ($show_done)
        kv $sync cfw-- : done
    !else
        kv--
    !endif

    cfw $sync kv++: HMAC512(Key : Slot X,\n                Data String : "PMEK mix",\n                Destination : Slot Z)
    kv $sync meks: Get MEK Seed
    kv $sync kv: HMAC512 Key with Data String
    kv $sync tempz: HMAC512 result Temp MEK Seed
    tempz++ $BUFFER_ACTIVATION
    !if ($show_done)
        kv $sync cfw-- : done
    !else
        kv--
    !endif

    cfw $sync kv++: HMAC512_Slots(Key : Slot Z,\n                         Data Key  : Slot Y\n                         Destination : Slot: X)
    kv $sync tempz: Get Temp MEK Seed
    kv $sync tempy: Get PMEK
    kv $sync kv: HMAC512 Key and Data Key
    kv $sync meks: HMAC512 result MEK Seed updated with PMEK
    !if ($show_done)
        kv $sync cfw-- : done
    !else
        kv--
    !endif

    cfw $sync kv++: Purge_key(Key: Slot Y,\n                Key : Slot Z)
    kv $sync tempy !! : Purge
    & kv $sync tempz !!
    !if ($show_done)
        kv $sync cfw-- : done
    !else
        kv--
    !endif
end


cfw $async mb : Command\nresponse
& mb $async fw++ : Command\ncomplete

!if ($show_api)
    note right mb
        | <b>Field   | <b>Size | <b>Definition |
        | chksum     | u32     | Little endian |
        | fips_status| u32     | Indicates if the command is FIPS approved or an error |
    end note
!endif
cfw--

@enduml
