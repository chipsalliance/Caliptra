'
' OCP Lock: UNLOCK_PMEK API sequence diagram showing Caliptra FW/HW interactions
'
@startuml

!$show_sometime_later = %false()

!include ocp_lock_utils.inc

!if ($show_title)
    Title "Create a new Storage Root Key"
!endif

!if ($show_precond)
    note across
        <b>Preconditions:</b>
        * A single Storage Root Key may or may not exist in the fuses, this sequence assumes one exists
    end note
!endif

gsrk++ $BUFFER_ACTIVATION

host $async fw++ : Create_Storage_Root_Key

fw $sync csrk : Create Storage Root Key next boot
csrk++ $BUFFER_ACTIVATION

fw $async host : Success

$sometimelater()

[->> crom++ : NVM subsystem Reset
& [->> fw : hhh

$sometimelater()

== Showing the ROM portion dealing with the fuses updates by the ROM ==

loop Caliptra ROM waits for fuse operation

    fw $sync csrk : Determine if create fuse operation requested
    csrk--
    note right fw
        <font color=blue>Would need to remove the operation state in media
    end note
    fw $async crom : Create_Storage_Root_Key
end

crom $sync fuses : Determine how many entries are programmable

alt previously programmed fuses entries not purged
    crom $sync fuses : purge previously programmed fuses entries not purged
    gsrk--
    note right crom
        <font color=blue>Not showing how at this time
    end note
end

crom $sync crom : Pick an unprogrammed entry to burn
crom $sync rand : Read a new Storage Root Key Value
crom $sync fuses : Burn that entry with new Storage Root Key
gsrk++ $BUFFER_ACTIVATION

crom $sync hoff++ $BUFFER_ACTIVATION: System Root Key existance\nNumberof entries remaining to be programmed
crom --
$sometimelater()

fw $async cfw++ : boot

cfw $sync hoff : Get hoff data
note right cfw
    Calitra FW can report the existance of a Storage Root Key and how many entries remain
end note

$sometimelater()


@enduml
