'
' OCP Lock: Power on sequence diagram showing Caliptra FW/HW interactions
'
'
@startuml

!include utils.inc

[->> crom++ : Power on

crom -> aes++: Deobfuscate UDS
crom -> aes: Write UDS IV
aes -> fuses: Read obfuscated UDS seed
aes -> uds ** : Write AES-CBC-Decrypt(obfuscation key, IV, obfuscated seed)
$activate(uds)
aes -> crom: Done
aes--

$kdf(crom, DICE UDS, uds, derivation constant, IDevID CDI, idev)

$kdf(crom, IDevID CDI, idev, derivation constant, Caliptra Stable Key, c_stable_key)

== Deobfucate the HEK seed ==

crom -> fuses: Read HEK mode from fuses

alt if in pre-production mode
    crom -> crom: HEK IV = PREPRODUCTION_HEK_IV
    crom -> crom: obfuscated HEK seed = 0x0000...
else if in perma-HEK mode
    crom -> crom: HEK IV = PERMA_HEK_IV
    crom -> crom: obfuscated HEK seed = 0x0000...
else if randomized HEK seed is present in fuses
    crom -> crom: HEK IV = PERMA_HEK_IV
    crom -> fuses: Read obfuscated HEK seed from fuses
else No HEK seed is available
    crom -> crom: Note the absence of the HEK
end

alt obfuscated HEK seed is available
    crom -> aes++: Deobfuscate HEK seed
    crom -> aes: Write HEK IV
    crom -> aes: Write obfuscated HEK seed
    aes -> hek_seed ** : Write AES-CBC-Decrypt(obfuscation key, IV, obfuscated seed)
    $activate(hek_seed)
    aes -> crom: Done
    aes--
end

crom -> cfw++ : FMC and runtime firmware boots
crom--

== Initialize the HEK if available ==

alt deobfuscated HEK seed is available
    $kdf(cfw, Caliptra stable key, c_stable_key, derivation constant, L.O.C.K. Stable Key, l_stable_key)

    $preconditioned_key_extract(HEK seed, hek_seed, L.O.C.K. Stable Key, l_stable_key, HEK, hek)

    cfw -> l_stable_key !! : Zeroize
    cfw -> hek_seed !! : Zeroize
    l_stable_key--
    hek_seed--
end

== Initialize an HPKE keypair for each algorithm supported ==

cfw -> drbg: Get a random 384-bit\n\
 private key seed for\n\
 DHKEM(P-384, HKDF-SHA384)
cfw -> drbg: Get a random 384-bit\n\
 private key seed for\n\
 the ECDH portion of\n\
 QSF-KEM(ML-KEM-1024, P-384)
cfw -> drbg: Get a random 512-bit\n\
 private key seed for\n\
 the ML-KEM portion of\n\
 QSF-KEM(ML-KEM-1024, P-384)

cfw -> hpke **: Stash random seeds in memory
$activate(hpke)

@enduml
