'
' OCP Lock: ENABLE_MPK API sequence diagram showing Caliptra FW/HW interactions
'
@startuml

!include utils.inc

note across
    <b>Preconditions:</b>
        * The HEK is present in a KV slot
end note

' Pre-existing state
$activate(hek)
$activate(hpke)

dfw -> cfw++ : ENABLE_MPK

alt Enabled MPK encryption secret not initialized
    cfw -> drbg: Get random 256-bit Enabled MPK encryption seed
    cfw -> hmac++: Derive Enabled MPK Encryption Secret
    cfw -> hmac: Write Enabled MPK encryption seed
    hmac -> enabled_mpk_encryption_secret: Write HMAC(0x0000..., Enabled MPK encryption seed)
    $activate(enabled_mpk_encryption_secret)
    hmac -> cfw: Done
    hmac--
end

$preconditioned_key_extract(HEK, hek, SEK, cfw, EPK, epk)

$hpke_unwrap(kv_ak, "")

$preconditioned_key_extract(Access key, kv_ak, EPK, epk, Locked MPK Encryption Secret, encryption_secret)

$zeroize(epk)
$zeroize(kv_ak)

$preconditioned_aes_decrypt(encryption_secret, encryption_key, locked MPK, mpk)

$preconditioned_aes_encrypt(enabled_mpk_encryption_secret, enabled_mpk_encryption_key, ready MPK, mpk)

cfw -> dfw: Command response\nand Enabled MPK
cfw--

@enduml
