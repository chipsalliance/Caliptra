'
' OCP Lock: UNLOCK_PMEK API sequence diagram showing Caliptra FW/HW interactions
'
@startuml

!include ocp_lock_utils.inc

!$show_all = %true()
'!$show_all = %false()

!if ($show_all)
    !$show_precond = %true()
    !$show_title = %true()
    !$show_api = %true()
    !$show_msg_parsing = %true()
    !$show_done = %true()
!else
    !$show_precond = %false()
    !$show_title = %false()
    !$show_api = %false()
    !$show_msg_parsing = %false()
    !$show_done = %false()
!endif

!if ($show_title)
    Title "Unlock PMEK"
!endif

!if ($show_precond)
    note across
        <b>Preconditions:</b>
        * Access Shared Secret already availble in a slot in KV
        * unlocking key already in a slot and generated on each reset
        <font color=red>Is there a separate Shared Secret per Admin User?</font>
    end note
!endif

srk++ $BUFFER_ACTIVATION
kemg++ $BUFFER_ACTIVATION
pmeks++ $BUFFER_ACTIVATION

fw $async mb++ : UNLOCK_PMEK

!if ($show_api)
    note right mb
        | <b>Field            | <b>Size          | <b>Definition |
        | chksum              | u32              | Little endian |
        | wrapped_access_key  | WrappedAccessKey | KEM-wrapped access keyn* kem_handle\n*kem_algorithm\n*kem_ciphertext\n* encrypted_access_key  |
        | locked_pmek         | EncryptedPmek    | PMEK encrypted to storage root key and access key |
    end note
!endif

mb $async cfw++ : Command

!if ($show_msg_parsing)
    cfw $sync mb : Get command
    mb--
    $self("cfw", "Determine command")
!else
    mb--
!endif
cfw $sync cfw: Determine rate of unlocking

alt Storage Root Key exists
    alt Unlocking rate below threshold

        == Get the Access Key ==
        cfw $sync kv++: Decaps(KEM Pair : kem_handle (G),\n            KEM ciphertext : kem_ciphertext\n            Destination : Slot Y)
        kv $sync kemg: Get KEM Keypair
        kv $sync kv: Decap KEM Ciphertext with Keypair
        kv $sync tempy: Put Shared Secret
        tempy++ $BUFFER_ACTIVATION
        !if ($show_done)
            kv $sync cfw-- : done
        !else
            kv--
        !endif


        cfw $sync kv++: Key_Unwrap(Key : Slot Y,\n                   Data: encrypted_access_key\n                   Destination : Slot Z)
        kv $sync tempy: Get Shared Secret
        kv $sync kv: Key_Unwrap encrypted_access_key with Key
        kv $sync tempz: Put Access Key
        tempz++ $BUFFER_ACTIVATION
        !if ($show_done)
            kv $sync cfw-- : done
        !else
            kv--
        !endif

        == Create the Encryption Key ==

        cfw $sync kv++: HMAC512_Slots(Key : Slot A,\n                         Data Key : Slot Z\n                         Destination Slot: Y)
        kv $sync srk: Get Storage Root Key
        kv $sync tempz: Get Access Key
        kv $sync kv: HMAC512 Slot A with Slot Z
        kv $sync tempy: HMAC512 result PMEK
        !if ($show_done)
            kv $sync cfw-- : done
        !else
            kv--
        !endif

        == Extract PMEK with Encryption Key ==

        cfw $sync kv++: Unwrap(Key : Slot Y,\n            Data: locked_pmek\n            Destination :  Slot Z)
        kv $sync tempy: Get Encryption Key
        kv $sync kv: Decrypt locked_pmek
        kv $sync tempz: PMEK
        !if ($show_done)
            kv $sync cfw-- : done
        !else
            kv--
        !endif

        == Encrypt PMEK with unlocked Encryption Key ==

        cfw $sync kv++: Wrap(Key: Slot B,\n         Data Key : Slot Z\n         Destination : unlocked_pmek)
        kv $sync pmeks: Get Encryption Key
        kv $sync tempz: Get PMEK
        kv $sync kv: Encrypt slot Z using Slot B
        !if ($show_done)
            kv $sync cfw-- : Unocked PMEK
        !else
            kv--
        !endif

        cfw $sync kv++: Purge_key(Key: Slot Y,\n                Key : Slot Z)
        kv $sync tempy !! : Purge
        & kv $sync tempz !!
        !if ($show_done)
            kv $sync cfw-- : done
        !else
            kv--
        !endif

        cfw $sync mb : Command response\nUnlocked_PMEK
        & mb $async fw++ : Command\ncomplete
    end
end

!if ($show_api)
    note right mb
        | <b>Field      | <b>Size       | <b>Definition |
        | chksum        | u32           | Little endian |
        | fips_status   | u32           | Indicates if the command is FIPS approved or an error |
        | unlocked_pmek | EncryptedPmek | PMEK encrypted to an export secret that is rotated  on reset |
    end note
!endif
cfw--

@enduml
